@inject IHttpContextAccessor httpContextAccessor
@using System.Security.Claims

@{
    var name = httpContextAccessor.HttpContext.User.Identity.Name;
    Console.WriteLine(name);
}
@{
  ViewData["Title"] = "Tableau de bord - Analytique";
}
@section VendorStyles {
  <link rel="stylesheet" href="~/vendor/libs/apex-charts/apex-charts.css" />
}
@section VendorScripts {
  <script src="~/vendor/libs/apex-charts/apexcharts.js"></script>
}
@section PageScripts {
  <script>
    'use strict';

    (function () {
      const cardColor = config.colors.cardColor;
      const headingColor = config.colors.headingColor;
      const legendColor = config.colors.bodyColor;
      const labelColor = config.colors.textMuted;
      const borderColor = config.colors.borderColor;

      document.addEventListener('DOMContentLoaded', () => {
        // Get the current year
        const currentYear = new Date().getFullYear();

        // Get the year of the previous year
        const previousYear = currentYear - 1;

        // Get the dropdown element
        const dropdown = document.getElementById("year-dropdown");
        const yearButton = document.getElementById("year-button");

        // Loop through the previous 3 years
        for (let i = previousYear; i >= previousYear - 5; i--) {
          const li = document.createElement("li");
            const a = document.createElement("a");
            a.classList.add("dropdown-item");
            a.href = "javascript:void(0);";
            a.dataset.year = i;  // Set the year as a data attribute
            a.textContent = i;  // Set the text to the year
            li.appendChild(a);  // Append the <a> to the <li>
            dropdown.appendChild(li);  // Append the <li> to the dropdown
        }
        
        const dropdownItems = document.querySelectorAll('.dropdown-item');
        dropdownItems.forEach(item => {
          item.addEventListener('click', (event) => {
            event.preventDefault();

            // R√©cup√©rer l'ann√©e s√©lectionn√©e
            const year = item.getAttribute('data-year');
            console.log(`Ann√©e s√©lectionn√©e : ${year || 'Aucune'}`);

            yearButton.textContent = `${year || 'Aucune'}`;
            // Appeler la fonction avec l'ann√©e s√©lectionn√©e
            getReservationsData(year);
          });
        });

        // Appeler avec un √©tat initial vide
        getReservationsData(null); // Aucun filtre d'ann√©e s√©lectionn√© par d√©faut
      });

      const getReservationsData = async (year) => {
        try {
          const yearParam = year ? `?year=${year}` : ''; // Construire la query string
          const response = await fetch(`/Reservations/GetReservationsData${yearParam}`);

          if (!response.ok) {
            throw new Error(`Erreur HTTP: ${response.status}`);
          }

          const data = await response.json();
          console.log('Donn√©es re√ßues:', data);

          // Transformation des donn√©es
          const months = data.map(item => item.monthYear);
          const pendingData = data.map(item => item.pendingReservations);
          const confirmedData = data.map(item => item.confirmedReservations);
          const cancelledData = data.map(item => item.cancelledReservations);

          if(yearParam != '') {
            const response2 = await fetch(`/Reservations/GetReservationGrowth${yearParam}`);

            if (!response2.ok) {
              throw new Error(`Erreur HTTP: ${response2.status}`);
            }

            const data2 = await response2.json();
            console.log('Donn√©es re√ßues:', data2);

             // V√©rifier que la croissance est un nombre valide
            if (!isNaN(data2)) {
                // Afficher le texte de croissance avec le nombre
                const growthTextElement = document.getElementById('growth_data_text');
                const growthNumberElement = document.getElementById('growth_data_number');
                
                growthNumberElement.innerText = data2.toFixed(2);
                // growthTextElement.classList.remove('d-none');
            } else {
                console.error('Croissance invalide re√ßue');
            }
            renderGrowthChart(data2);
          }

          renderReservationLineChart(months, pendingData, confirmedData, cancelledData);
        } catch (error) {
          console.error("Erreur lors de la r√©cup√©ration des donn√©es :", error.message);
        }
      };

      const renderGrowthChart = (growdata) => {
        const growthChartEl = document.querySelector('#growthChart'),
          growthChartOptions = {
            series: [growdata],
            labels: ['Croissance'],
            chart: {
              height: 240,
              type: 'radialBar'
            },
            plotOptions: {
              radialBar: {
                size: 150,
                offsetY: 10,
                startAngle: -150,
                endAngle: 150,
                hollow: {
                  size: '55%'
                },
                track: {
                  background: cardColor,
                  strokeWidth: '100%'
                },
                dataLabels: {
                  name: {
                    offsetY: 15,
                    color: legendColor,
                    fontSize: '15px',
                    fontWeight: '500',
                    fontFamily: 'Public Sans'
                  },
                  value: {
                    offsetY: -25,
                    color: headingColor,
                    fontSize: '22px',
                    fontWeight: '500',
                    fontFamily: 'Public Sans'
                  }
                }
              }
            },
            colors: [config.colors.primary],
            fill: {
              type: 'gradient',
              gradient: {
                shade: 'dark',
                shadeIntensity: 0.5,
                gradientToColors: [config.colors.primary],
                inverseColors: true,
                opacityFrom: 1,
                opacityTo: 0.6,
                stops: [30, 70, 100]
              }
            },
            stroke: {
              dashArray: 5
            },
            grid: {
              padding: {
                top: -35,
                bottom: -10
              }
            },
            states: {
              hover: {
                filter: {
                  type: 'none'
                }
              },
              active: {
                filter: {
                  type: 'none'
                }
              }
            }
        };

        if (typeof growthChartEl !== undefined && growthChartEl !== null) {
          const growthChart = new ApexCharts(growthChartEl, growthChartOptions);
          growthChart.render();
        }
      };

      const renderReservationLineChart = (months, pendingData,confirmedData, cancelledData) => {
        const totalRevenueChartEl = document.querySelector('#totalRevenueChart');
        if (!totalRevenueChartEl) {
          console.warn("√âl√©ment graphique '#totalRevenueChart' introuvable.");
          return;
        }
        const totalRevenueChartOptions = {
          series: [
            { name: "Confirm√©es", data: confirmedData },
            { name: "En attente", data: pendingData },
            { name: "Annul√©es", data: cancelledData }
          ],
          chart: {
            height: 317,
            type: 'line', // Passer √† 'line' pour un graphique lin√©aire
            toolbar: { show: false }
          },
          stroke: {
            curve: 'smooth', // Courbe liss√©e pour la ligne
            width: 3, // Largeur de la ligne
            lineCap: 'round', // Arrondi aux bords
            colors: [config.colors.primary, config.colors.info, config.colors.danger] // Couleur des lignes
          },
          colors: [config.colors.primary, config.colors.info, config.colors.danger], // Couleur des lignes
          dataLabels: { enabled: false },
          legend: {
            show: true,
            horizontalAlign: 'left',
            position: 'top',
            markers: { height: 8, width: 8, radius: 12, offsetX: -5 },
            fontSize: '13px',
            labels: { colors: legendColor }
          },
          grid: {
            strokeDashArray: 7,
            borderColor: borderColor,
            padding: { top: 0, bottom: -8, left: 20, right: 20 }
          },
          xaxis: {
            categories: months, // Mois ou autres cat√©gories
            labels: { style: { fontSize: '13px', colors: labelColor } }
          },
          yaxis: {
            labels: { 
              style: { fontSize: '13px', colors: labelColor },
              formatter: function(value) {
                // Formater l'axe des ordonn√©es pour afficher des entiers uniquement
                return Math.round(value); // Arrondi √† l'entier le plus proche
              }
             }
          },
          markers: {
            size: 5, // Taille des marqueurs (points sur les lignes)
            colors: [config.colors.primary, config.colors.info, config.colors.danger], // Couleur des points
            strokeColor: 'white', // Couleur du bord des points
            strokeWidth: 2
          }
        };

        // Supprimer l'ancien graphique s'il existe
        if (totalRevenueChartEl._chartInstance) {
          totalRevenueChartEl._chartInstance.destroy();
        }

        const totalRevenueChart = new ApexCharts(totalRevenueChartEl, totalRevenueChartOptions);
        totalRevenueChartEl._chartInstance = totalRevenueChart;
        totalRevenueChart.render();
      };
    })();
  </script>
}


<div class="row">
  <!-- En-t√™te du Tableau de bord -->
  <div class="col-xxl-8 mb-6">
    <div class="card">
      <div class="d-flex align-items-start row">
        <div class="col-sm-7">
          <div class="card-body">
            <h5 class="card-title text-primary mb-3">Bonjour ! üéâ</h5>
            <p class="mb-6">Vous avez connu une belle activit√© aujourd'hui.<br> Consultez votre profil pour voir vos derni√®res r√©alisations.
            </p>
            <!-- <a href="javascript:;" class="btn btn-sm btn-outline-primary">Voir les Badges</a> -->
          </div>
        </div>
        <div class="col-sm-5 text-center text-sm-left">
          <div class="card-body pb-0 px-0 px-md-6">
            <img src="~/img/illustrations/man-with-laptop.png" height="175" alt="Voir Badge Utilisateur">
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-xxl-4 col-lg-12">
    <div class="row">
      <div class="col-lg-6 col-md-12 col-6 mb-6">
        <div class="card h-100">
          <div class="card-body">
            <div class="card-title d-flex align-items-start justify-content-between mb-4">
              <div class="avatar flex-shrink-0">
                <img src="~/img/icons/unicons/chart-success.png" alt="succ√®s graphique" class="rounded">
              </div>
            </div>
            <p class="mb-1">Profit</p>
            <h4 class="card-title mb-3">Ar 1 ,628</h4>
            <small class="text-success fw-medium"><i class='bx bx-up-arrow-alt'></i> +72.80%</small>
          </div>
        </div>
      </div>
      <div class="col-lg-6 col-md-12 col-6 mb-6">
        <div class="card h-100">
          <div class="card-body">
            <div class="card-title d-flex align-items-start justify-content-between mb-4">
              <div class="avatar flex-shrink-0">
                <img src="~/img/icons/unicons/wallet-info.png" alt="informations portefeuille" class="rounded">
              </div>
            </div>
            <p class="mb-1">Ventes</p>
            <h4 class="card-title mb-3">Ar 4 679</h4>
            <small class="text-success fw-medium"><i class='bx bx-up-arrow-alt'></i> +28.42%</small>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-12 col-xxl-8">
    <div class="card">
      <div class="row row-bordered g-0">
        <div class="col-lg-8">
          <div class="card-header d-flex align-items-center justify-content-between">
            <h5 class="m-0 me-2">Nombre des r√©servations</h5>
            <div class="dropdown">
              <button class="btn p-0" type="button" id="totalRevenue" data-bs-toggle="dropdown">
                <i class="bx bx-dots-vertical-rounded bx-lg text-muted"></i>
              </button>
              <div class="dropdown-menu dropdown-menu-end">
                <a class="dropdown-item" href="javascript:void(0);">Actualiser</a>
                <a class="dropdown-item" href="javascript:void(0);">Partager</a>
              </div>
            </div>
          </div>
          <div id="totalRevenueChart" class="px-3"></div>
        </div>
        <div class="col-lg-4 d-flex align-items-center">
          <div class="card-body px-xl-9">
            <div class="text-center mb-6">
              <div class="btn-group">
                <button type="button" class="btn btn-outline-primary" id="year-button">
                  <script>document.write(new Date().getFullYear())</script>
                </button>
                <button type="button" class="btn btn-outline-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown">
                  <span class="visually-hidden">Activer le menu d√©roulant</span>
                </button>
                <ul id="year-dropdown" class="dropdown-menu">
                  <li><a class="dropdown-item" href="javascript:void(0);" data-year="">S√©lectionnez une ann√©e</a></li>
                </ul>
              </div>
            </div>
            <div id="growthChart"></div>
            <div class="text-center fw-medium my-6" id="growth_data_text"><span id="growth_data_number"></span>% de Croissance en terme de <b> r√©servation Confirm√©s </b> par rapport √† l'ann√©e pr√©cedente</div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Paiements et Transactions -->
  <div class="col-12 col-md-8 col-lg-12 col-xxl-4">
    <div class="row">
      <div class="col-6 mb-6">
        <div class="card h-100">
          <div class="card-body">
            <div class="card-title d-flex align-items-start justify-content-between mb-4">
              <div class="avatar flex-shrink-0">
                <img src="~/img/icons/unicons/paypal.png" alt="paypal" class="rounded">
              </div>
            </div>
            <p class="mb-1">Paiements</p>
            <h4 class="card-title mb-3">Ar 2 456</h4>
            <small class="text-danger fw-medium"><i class='bx bx-down-arrow-alt'></i> -14.82%</small>
          </div>
        </div>
      </div>
      <div class="col-6 mb-6">
        <div class="card h-100">
          <div class="card-body">
            <div class="card-title d-flex align-items-start justify-content-between mb-4">
              <div class="avatar flex-shrink-0">
                <img src="~/img/icons/unicons/cc-primary.png" alt="Carte de Cr√©dit" class="rounded">
              </div>
            </div>
            <p class="mb-1">Transactions</p>
            <h4 class="card-title mb-3">Ar 1 ,857</h4>
            <small class="text-success fw-medium"><i class='bx bx-up-arrow-alt'></i> +28.14%</small>
          </div>
        </div>
      </div>
    </div>

<!-- Statistiques des Commandes -->
<div class="row">
  <div class="col-12">
    <div class="card h-100">
      <div class="card-header d-flex justify-content-between">
        <h5 class="mb-1">Statistiques des Commandes</h5>
        <p class="card-subtitle">42.82k Ventes Totales</p>
        <div class="dropdown">
          <button class="btn text-muted p-0" type="button" id="orederStatistics" data-bs-toggle="dropdown">
            <i class="bx bx-dots-vertical-rounded bx-lg"></i>
          </button>
          <div class="dropdown-menu dropdown-menu-end">
            <a class="dropdown-item" href="javascript:void(0);">Tout S√©lectionner</a>
            <a class="dropdown-item" href="javascript:void(0);">Actualiser</a>
            <a class="dropdown-item" href="javascript:void(0);">Partager</a>
          </div>
        </div>
      </div>
      <div id="orderStatisticsChart"></div>
    </div>
  </div>
</div>
  </div>
</div>
