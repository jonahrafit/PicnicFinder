@{
  ViewData["Title"] = "Réservations";
}

<div class="d-flex justify-content-between align-items-center">
    <h3 class="pb-1 mb-6 text-muted">Liste des réservations</h3>
    <div class="d-flex gap-3">
        <button class="btn btn-light" title="Vue Calendrier">
            <i class="bx bxs-calendar"></i>
        </button>
        <button class="btn btn-light" title="Vue Tableau">
            <i class="bx bx-table"></i>
        </button>
    </div>
</div>
<div class="alert-container position-fixed top-0 end-0 p-3" style="z-index: 1050;">
    <div id="alertMessage" class="alert d-none" role="alert"></div>
</div>

<div class="row justify-content-center mb-3">
    <div class="col-md-8">
        <form id="filtersForm" class="d-flex justify-content-between">
            <!-- Filtre Status -->
            <div class="mb-3">
                <label for="statusFilter" class="form-label">Statut</label>
                <select id="statusFilter" class="form-select" aria-label="Filtrer par statut">
                    <option value="">Tous</option>
                    <option value="PENDING">En attente</option>
                    <option value="CONFIRMED">Confirmé</option>
                    <option value="CANCELLED">Annulé</option>
                </select>
            </div>
            <!-- Filtre Mois -->
            <div class="mb-3">
                <label for="monthFilter" class="form-label">Mois</label>
                <select id="monthFilter" class="form-select" aria-label="Sélectionner le mois">
                    <option value="">Tous les mois</option>
                    <option value="1">Janvier</option>
                    <option value="2">Février</option>
                    <option value="3">Mars</option>
                    <option value="4">Avril</option>
                    <option value="5">Mai</option>
                    <option value="6">Juin</option>
                    <option value="7">Juillet</option>
                    <option value="8">Août</option>
                    <option value="9">Septembre</option>
                    <option value="10">Octobre</option>
                    <option value="11">Novembre</option>
                    <option value="12">Décembre</option>
                </select>
            </div>

            <!-- Filtre Année -->
            <div class="mb-3">
                <label for="yearFilter" class="form-label">Année</label>
                <select id="yearFilter" class="form-select" aria-label="Sélectionner l'année">
                    <option value="">Toutes les années</option>
                    <!-- Exemple d'années, vous pouvez générer dynamiquement les années avec JavaScript ou du côté serveur -->
                    <option value="2023">2023</option>
                    <option value="2024">2024</option>
                    <option value="2025">2025</option>
                </select>
            </div>
            <!-- Bouton de recherche -->
            <div class="d-flex align-items-end">
                <button type="submit" class="btn btn-primary">Filtrer</button>
            </div>
        </form>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover table-bordered align-middle">
        <thead class="table-dark">
            <tr>
                <th scope="col">ID</th>
                <th scope="col">Client</th>
                <th scope="col">Space ID</th>
                <th scope="col">Reservation Date</th>
                <th scope="col">Start Date</th>
                <th scope="col">End Date</th>
                <th scope="col">Status</th>
                <th scope="col">Approbation</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var reservation in Model.Reservations)
            {
                <tr>
                    <td>@reservation.Id</td>
                    <td>@reservation.EmployeeId</td>
                    <td>@reservation.SpaceId</td>
                    <td>@reservation.ReservationDate.ToString("dd/MM/yyyy HH:mm:ss")</td>
                    <td>@reservation.StartDate.ToString("dd/MM/yyyy HH:mm:ss")</td>
                    <td>@reservation.EndDate.ToString("dd/MM/yyyy HH:mm:ss")</td>
                    <td>
                        @if (reservation.Status != null)
                        {
                            <span class="badge 
                                @(reservation.Status.ToString() == "PENDING" ? "bg-warning text-dark" : 
                                  reservation.Status.ToString() == "CONFIRMED" ? "bg-success text-dark" : 
                                  reservation.Status.ToString() == "CANCELLED" ? "bg-danger text-dark" : "bg-secondary")">
                                @reservation.Status
                            </span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Non défini</span>
                        }
                    </td>
                    <td>
                        @if (reservation.Status.ToString() == "PENDING")
                        {
                            <button class="btn btn-success btn-sm text-dark" onclick="approveReservation(@reservation.Id, @reservation.EmployeeId)">Approuver</button>
                            <button class="btn btn-danger btn-sm text-dark" onclick="rejectReservation(@reservation.Id, @reservation.EmployeeId)">Refuser</button>
                        }
                        else
                        {
                            <span class="text-muted">Aucune action</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="d-flex justify-content-end">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item">
                <a class="page-link" href="#" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            <li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item">
                <a class="page-link" href="#" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>

<!-- Modal pour Approuver -->
<div class="modal fade" id="approveModal" tabindex="-1" aria-labelledby="approveModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="approveModalLabel">Confirmer l'approbation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Êtes-vous sûr de vouloir approuver cette réservation ?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-success" id="confirmApproveButton">Confirmer</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal pour Refuser -->
<div class="modal fade" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectModalLabel">Confirmer le refus</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Êtes-vous sûr de vouloir Annuler cette réservation ?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-danger" id="confirmRejectButton">Confirmer</button>
            </div>
        </div>
    </div>
</div>


<script>
    let currentReservationId = null;
    let currentEmployeeId = null;
    let currentStatus = null;

    // Ouvrir le modal pour approuver
    function approveReservation(reservationId, employeeId) {
        currentReservationId = reservationId;
        currentEmployeeId = employeeId;
        currentStatus = "CONFIRMED";

        const modal = new bootstrap.Modal(document.getElementById('approveModal'));
        modal.show();
    }

    // Ouvrir le modal pour refuser
    function rejectReservation(reservationId, employeeId) {
        currentReservationId = reservationId;
        currentEmployeeId = employeeId;
        currentStatus = "CANCELLED";

        const modal = new bootstrap.Modal(document.getElementById('rejectModal'));
        modal.show();
    }

    function showAlert(message, type) {
        const alertBox = document.getElementById('alertMessage');
        alertBox.textContent = message;
        alertBox.className = `alert alert-${type} alert-dismissible fade show`;

        // Affiche l'alerte
        alertBox.classList.remove('d-none');

        // Cacher automatiquement après 5 secondes
        setTimeout(() => {
            alertBox.classList.add('d-none');
            alertBox.className = 'alert d-none'; // Réinitialisation de la classe
        }, 5000);
    }

    // Confirmation pour approuver
    document.getElementById('confirmApproveButton').addEventListener('click', function () {
        const modal = bootstrap.Modal.getInstance(document.getElementById('approveModal'));
        modal.hide();
        updateReservationStatus(currentReservationId, currentEmployeeId, currentStatus);
    });

    // Confirmation pour refuser
    document.getElementById('confirmRejectButton').addEventListener('click', function () {
        const modal = bootstrap.Modal.getInstance(document.getElementById('rejectModal'));
        modal.hide();
        updateReservationStatus(currentReservationId, currentEmployeeId, currentStatus);
    });

    // Fonction pour mettre à jour le statut de la réservation
    function updateReservationStatus(reservationId, employeeId, status) {
        fetch(`/Reservations/UpdateStatus`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ reservationId, employeeId: employeeId, status: status })
        })
        .then(response => response.json())
        .then(data => {
            if (data.message) {
                showAlert(data.message, 'info'); 
            }
            location.reload(); // Actualiser la liste des réservations
        })
        .catch(error => console.error('Erreur:', error));
    }
</script>
