@model List<SpaceActivity>

@{
  ViewData["Title"] = "Modification des espaces";
}

<style>
  .multiselect-container {
    position: relative;
    display: inline-block;
    width: 100%;
  }

  .dropdown-menu {
    width: 100%;
    max-height: 200px;
    overflow-y: auto;
    display: none;
    /* Masquer le menu d√©roulant par d√©faut */
    position: absolute;
    top: 100%;
    z-index: 1000;
  }

  .multiselect-container.active .dropdown-menu {
    display: block;
    /* Afficher le menu lorsque le conteneur est actif */
  }

  .selected-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
    margin-bottom: 5px;
  }

  .tag {
    background-color: #0d6efd;
    color: #fff;
    border-radius: 5px;
    padding: 3px 8px;
    font-size: 12px;
    display: inline-flex;
    align-items: center;
    gap: 5px;
  }

  .tag .remove-btn {
    cursor: pointer;
    font-weight: bold;
    color: #fff;
  }

  .dropdown-item {
    cursor: pointer;
  }
</style>

<div class="row">
  <div class="col-xxl">
    <div class="card mb-6">
      <div class="card-header d-flex align-items-center justify-content-between">
        <h5 class="mb-0">Formulaire de modification d'un espace</h5>
        <small class="text-muted float-end">Remplissez les informations requises</small>
      </div>
      <div class="card-body">
        <form method="post" enctype="multipart/form-data" action="/Spaces/CreateSpace" id="createSpaceForm">
          <input type="hidden" id="selected-activities" name="ActivityIds" value="">
          <input type="hidden" step="any" class="form-control" id="latitude" name="Latitude" value=""
            placeholder="Latitude" readonly required />
          <input type="hidden" step="any" class="form-control" id="longitude" name="Longitude" value=""
            placeholder="Longitude" readonly required />

          <div class="row">
            <div class="col-7 col-md-7 mb-4">
              <label for="name" class="form-label fs-5">Nom de l'espace</label>
              <div class="input-group">
                <span class="input-group-text"><i class="bx bx-home"></i></span>
                <input type="text" class="form-control" id="name" name="Name" placeholder="Nom de l'espace" required />
              </div>
            </div>

            <!-- Capacit√© -->
            <div class="col-2 col-md-2 mb-4">
              <label for="capacity" class="form-label fs-5">Capacit√©</label>
              <div class="input-group">
                <span class="input-group-text"><i class='bx bxs-circle-three-quarter'></i></span>
                <input type="number" class="form-control" id="capacity" name="Capacity"
                  placeholder="Capacit√© de l'espace" min="1" required />
              </div>
            </div>
          </div>

          <div class="row">
            <!-- Localisation (Carte) -->
            <div class="col-md-7 col-7 mb-4">
              <label for="map" class="form-label fs-5">Localisation : <span id="lat_longitude"></span></label>
              <div id="map" style="height: 300px; border-radius: 10px;"></div>
            </div>

            <!-- Description -->
            <div class="col-md-5 col-5">
              <div class="mb-4">
                <label for="description" class="form-label fs-5">Description</label>
                <textarea class="form-control" id="description" name="Description" placeholder="Description de l'espace"
                  rows="4"></textarea>
              </div>

              <!-- Activit√©s -->
              <div class="mb-4">
                <label for="activities" class="form-label fs-5">Activit√©s</label>
                <div class="multiselect-container">
                  <div class="selected-tags"></div>
                  <input type="text" id="multiselect-input" class="form-control"
                    placeholder="Rechercher et s√©lectionner..." />
                  <ul class="dropdown-menu" id="multiselect-options">
                    @foreach (var activity in Model)
                    {
                      <li data-value="@activity.Id" class="dropdown-item">@activity.Name</li>
                    }
                  </ul>
                </div>
              </div>
            </div>
          </div>

          <!-- Photos -->
          <div class="mb-4">
            <label for="photos" class="form-label fs-5">Photos</label>
            <div class="input-group">
              <span class="input-group-text"><i class="bx bx-image"></i></span>
              <input type="file" class="form-control" id="photos" name="Photos" accept=".jpg,.png,.gif" multiple />
            </div>
          </div>

          <!-- Bouton de soumission -->
          <div class="d-flex justify-content-end">
            <button type="submit" class="btn btn-primary px-4">Modifier l'espace</button>
          </div>

        </form>
      </div>

    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const $input = $('#multiselect-input');
    const $options = $('#multiselect-options');
    const $tags = $('.selected-tags');
    const $container = $('.multiselect-container');
    const $selectedActivities = $('#selected-activities');

    var default_lat = -18.942164;
    var default_long = 1127.664074;

    const updateDropdown = (searchTerm) => {
      const term = searchTerm.toLowerCase();
      $options.children().each(function () {
        const text = $(this).text().toLowerCase();
        $(this).toggle(text.includes(term));
      });
    };

    const addTag = (text, value) => {
      const exists = $tags.find(`[data-value="${value}"]`).length > 0;
      if (!exists) {
        const $tag = $(`
                <div class="tag" data-value="${value}">
                    ${text} <span class="remove-btn">&times;</span>
                </div>
            `);
        $tags.append($tag);
        updateSelectedActivities(value);
      }
    };

    const removeTag = (value) => {
      $tags.find(`[data-value="${value}"]`).remove();
      updateSelectedActivities(value, true);
    };

    const updateSelectedActivities = (value, isRemoval = false) => {
      let selectedActivities = $selectedActivities.val().split(',').filter(v => v.length > 0);
      if (isRemoval) {
        selectedActivities = selectedActivities.filter(v => v !== value.toString());
      } else {
        if (!selectedActivities.includes(value.toString())) {
          selectedActivities.push(value);
        }
      }
      $selectedActivities.val(selectedActivities.join(','));
    };

    // Afficher/masquer le menu d√©roulant
    $input.on('focus', function () {
      $container.addClass('active');
    });

    $(document).on('click', function (e) {
      if (!$(e.target).closest('.multiselect-container').length) {
        $container.removeClass('active');
      }
    });

    // Rechercher et filtrer les options
    $input.on('input', function () {
      const searchTerm = $(this).val();
      updateDropdown(searchTerm);
    });

    // Ajouter une option s√©lectionn√©e
    $options.on('click', 'li', function () {
      const text = $(this).text();
      const value = $(this).data('value');
      addTag(text, value);

      // Ajouter l'ID de l'activit√© dans le champ cach√©
      let selectedActivities = $('#selected-activities').val().split(',');
      if (!selectedActivities.includes(value.toString())) {
        selectedActivities.push(value);
      }
      $('#selected-activities').val(selectedActivities.join(','));

      $input.val('');
      updateDropdown('');
      $container.removeClass('active');
    });

    // Supprimer un tag s√©lectionn√©
    $tags.on('click', '.remove-btn', function () {
      const value = $(this).closest('.tag').data('value');
      removeTag(value);
    });
    var map = L.map('map').setView([default_lat, default_long], 17);
    var satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
      attribution: '&copy; Esri & OpenStreetMap contributors',
      maxZoom: 22
    }).addTo(map);

    // üè∑Ô∏è Ajout des labels des lieux
    var labels = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}', {
      attribution: '&copy; Esri'
    }).addTo(map);

    // üìç Marqueur draggable
    var marker = L.marker([default_lat, default_long], { draggable: true }).addTo(map);

    function updateCoordinates(lat, lng) {
      document.getElementById("lat_longitude").textContent = '[' + lat + ', ' + lng + ']';
      document.getElementById("latitude").value = lat;
      document.getElementById("longitude").value = lng;
    }

    // üìå Clic sur la carte pour d√©placer le marqueur
    map.on('click', function (e) {
      var lat = parseFloat(e.latlng.lat.toFixed(6));
      var lng = parseFloat(e.latlng.lng.toFixed(6));
      marker.setLatLng([lat, lng]);
      updateCoordinates(lat, lng);
    });

    // üîÑ D√©placement du marqueur
    marker.on('dragend', function () {
      var lat = parseFloat(marker.getLatLng().lat.toFixed(6));
      var lng = parseFloat(marker.getLatLng().lng.toFixed(6));
      updateCoordinates(lat, lng);
    });

    // ‚úÖ Forcer le rafra√Æchissement apr√®s le chargement
    map.on('load', function () {
      map.invalidateSize();
    });
  });
</script>
